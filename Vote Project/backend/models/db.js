// // üìÅ models/db.js
// require('dotenv').config();
// const mysql = require('mysql2');
// const db = mysql.createConnection({
//     host: process.env.DB_HOST,
//     user: process.env.DB_USER,
//     password: process.env.DB_PASSWORD,
//     database: process.env.DB_NAME,
//     port: process.env.DB_PORT || 3306
// });

// db.connect(err => {
//     if (err) {
//         console.error('MySQL connection error:', err);
//         process.exit(1);
//     } else {
//         console.log('Connected to MySQL');
//     }
// });

// module.exports = db;

// backend/models/db.js
// require('dotenv').config();
// const mysql = require('mysql2/promise');

// const db = mysql.createPool({
//     host: process.env.DB_HOST,
//     user: process.env.DB_USER,
//     password: process.env.DB_PASSWORD,
//     database: process.env.DB_NAME,
//     port: process.env.DB_PORT || 3306,
//     waitForConnections: true,
//     connectionLimit: 10,
//     queueLimit: 0,
// });

// // ‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ï‡∏≠‡∏ô start
// (async () => {
//     try {
//         const conn = await db.getConnection();
//         console.log("‚úÖ Connected to MySQL");
//         conn.release(); // ‡∏õ‡∏•‡πà‡∏≠‡∏¢ connection ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤ pool
//     } catch (err) {
//         console.error("‚ùå MySQL connection error:", err);
//         process.exit(1);
//     }
// })();

// module.exports = db;

// version with getConnection for transaction support
// üìÅ models/db.js
// require('dotenv').config();
// const mysql = require('mysql2/promise');

// const pool = mysql.createPool({
//     host: process.env.DB_HOST,
//     user: process.env.DB_USER,
//     password: process.env.DB_PASSWORD,
//     database: process.env.DB_NAME,
//     port: process.env.DB_PORT || 3306,
//     waitForConnections: true,
//     connectionLimit: 10,
//     queueLimit: 0,
// });

// // ‚úÖ ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á 2 ‡πÅ‡∏ö‡∏ö
// // - db.query(sql, params, callback) ‚Üí callback style (‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°)
// // - await db.query(sql, params) ‚Üí promise style (‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà) ‡∏Ñ‡∏∑‡∏ô rows ‡∏ï‡∏£‡∏á‡πÜ
// function query(sql, params, callback) {
//     if (typeof callback === 'function') {
//         pool.query(sql, params)
//             .then(([rows]) => callback(null, rows))
//             .catch(err => callback(err));
//     } else {
//         return pool.query(sql, params).then(([rows]) => rows);
//     }
// }

// // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö transaction
// async function getConnection() {
//     return pool.getConnection();
// }

// module.exports = { query, getConnection, pool};


// models/db.js  (HYBRID: ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á callback ‡πÅ‡∏•‡∏∞ await)
// require('dotenv').config();
// const mysql = require('mysql2/promise');

// const pool = mysql.createPool({
//     host: process.env.DB_HOST,
//     user: process.env.DB_USER,
//     password: process.env.DB_PASSWORD,
//     database: process.env.DB_NAME,
//     port: process.env.DB_PORT || 3306,
//     waitForConnections: true,
//     connectionLimit: 10,
//     queueLimit: 0,
// });

// // ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ 2 ‡πÅ‡∏ö‡∏ö:
// // 1) db.query(sql, params, (err, rows)=>{})   ‚Üê ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°
// // 2) const rows = await db.query(sql, params) ‚Üê ‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏°‡πà
// function query(sql, params, callback) {
//     if (typeof callback === 'function') {
//         pool.query(sql, params)
//             .then(([rows]) => callback(null, rows))
//             .catch(err => callback(err));
//     } else {
//         return pool.query(sql, params).then(([rows]) => rows);
//     }
// }

// async function getConnection() {
//     const conn = await pool.getConnection();
//     // ‡πÉ‡∏´‡πâ conn.query ‡∏Ñ‡∏∑‡∏ô rows ‡∏ï‡∏£‡∏á‡πÜ ‡∏î‡πâ‡∏ß‡∏¢ (‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥ transaction)
//     const rawQuery = conn.query.bind(conn);
//     conn.query = async (sql, params) => {
//         const [rows] = await rawQuery(sql, params);
//         return rows;
//     };
//     return conn;
// }

// module.exports = { query, getConnection, pool };

// finally, ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö promise ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
// üìÅ models/db.js
// require('dotenv').config();
// const mysql = require('mysql2/promise');

// const pool = mysql.createPool({
//   host:     process.env.DB_HOST,
//   user:     process.env.DB_USER,
//   password: process.env.DB_PASSWORD,
//   database: process.env.DB_NAME,
//   port:     process.env.DB_PORT || 3306,
//   waitForConnections: true,
//   connectionLimit: 10,
//   queueLimit: 0,
// });

// // ‚úÖ ‡∏Ñ‡∏∑‡∏ô rows ‡∏ï‡∏£‡∏á ‡πÜ
// async function query(sql, params) {
//   const [rows] = await pool.query(sql, params);
//   return rows;
// }

// // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Transaction
// async function getConnection() {
//   return pool.getConnection();
// }

// module.exports = { query, getConnection, pool };






//////// 

require('dotenv').config();
const mysql = require('mysql2/promise');

const pool = mysql.createPool({
    host: process.env.DB_HOST,
    user: process.env.DB_USER,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    port: Number(process.env.DB_PORT) || 3306,
    waitForConnections: true,
    connectionLimit: 10,
    queueLimit: 0,
});

// ‚úÖ query() ‡∏Ñ‡∏∑‡∏ô rows ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
async function query(sql, params) {
    const [rows] = await pool.query(sql, params);
    return rows;
}

// ‚úÖ getConnection() ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö transaction
async function getConnection() {
    return pool.getConnection();
}

module.exports = {
    query,
    getConnection,
    pool, // export pool ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏á ‡πÜ
};
