// üìÅ routes/election.routes.js
const express = require("express");
const router = express.Router();
const multer = require("multer");
const path = require("path");
const electionController = require("../controllers/election.controller");
const verifyToken = require("../middleware/auth");
const requireRole = require('../middleware/role');

// üì¶ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "uploads/elections"); // üìÅ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
  },
  filename: (req, file, cb) => {
    const ext = path.extname(file.originalname);
    cb(null, Date.now() + ext); // ‚úÖ ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
  },
});

const upload = multer({ storage });
// router.get("/", electionController.getAllElections);

router.use(verifyToken); // ‡∏ó‡∏∏‡∏Å endpoint ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ï‡πâ‡∏≠‡∏á login
router.get("/", electionController.getElections);
router.get("/:id", electionController.getElectionById);
router.put(
  "/:id",
  verifyToken,
  electionController.uploadElectionImage, // ‚úÖ middleware ‡∏Ç‡∏≠‡∏á multer
  electionController.updateElectionWithImage
);
router.delete("/:id", verifyToken, electionController.deleteElection);
router.post("/", upload.single("image"),verifyToken, electionController.createElection);
// router.put('/:id/status', verifyToken, electionController.updateElectionStatus);

router.patch(
  "/:id/status",
  verifyToken,
  requireRole("‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•"), // ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ admin
  electionController.patchElectionStatus
);

router.patch(
  '/:id/visibility',
  verifyToken,
  requireRole('‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•'),
  electionController.updateVisibility
);

module.exports = router;
