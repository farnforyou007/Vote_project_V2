import React from "react";
import Header from "../components/Header";
import {
    BarChart,
    Bar,
    XAxis,
    YAxis,
    CartesianGrid,
    Tooltip,
    Legend,
    PieChart,
    Pie,
    Cell,
    ResponsiveContainer,
    AreaChart,
    Area,
} from "recharts";

// ------------------------------
// üî¢ MOCK DATA (‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° API ‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á)
// ------------------------------
const kpis = {
    users: 1248,
    eligible: 1193,
    elections: 12,
    ongoing: 2,
    candidates: 56,
    admins: 4,
    committee: 22,
    votesUsed: 842,
    votesRemaining: 351,
};

const turnoutHistory = [
    { name: "‡∏Å‡∏¢. 67", turnout: 66 },
    { name: "‡∏Å‡∏û. 68", turnout: 71 },
    { name: "‡∏Å‡∏Ñ. 68", turnout: 63 },
    { name: "‡∏™‡∏Ñ. 68", turnout: 74 },
    { name: "‡∏°‡∏µ‡∏Ñ. 69", turnout: 69 },
];

const ballotSplit = [
    { name: "‡πÇ‡∏´‡∏ß‡∏ï", value: 72 },
    { name: "‡∏á‡∏î‡∏≠‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á", value: 8 },
    { name: "‡πÑ‡∏°‡πà‡∏°‡∏≤‡πÇ‡∏´‡∏ß‡∏ï", value: 20 },
];

const deptData = [
    { name: "‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°", students: 320 },
    { name: "‡∏ö‡∏±‡∏ç‡∏ä‡∏µ", students: 280 },
    { name: "‡∏Ñ‡∏≠‡∏°‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à", students: 210 },
    { name: "‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°", students: 180 },
    { name: "‡πÑ‡∏ü‡∏ü‡πâ‡∏≤", students: 120 },
];

const yearData = [
    { name: "‡∏õ‡∏µ 1", count: 410 },
    { name: "‡∏õ‡∏µ 2", count: 385 },
    { name: "‡∏õ‡∏µ 3", count: 320 },
    { name: "‡∏õ‡∏µ 4", count: 78 },
];

const activityLogs = [
    { id: 1, time: "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ 09:12", text: "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ 2 ‡∏Ñ‡∏ô ‡πÉ‡∏ô \"‡∏™‡∏†‡∏≤‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô 2568\"" },
    { id: 2, time: "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ 08:40", text: "‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á \"‡∏ä‡∏°‡∏£‡∏°‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°\" ‡πÅ‡∏•‡∏∞‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡∏ú‡∏•" },
    { id: 3, time: "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô 16:05", text: "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®: ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö 22 ‡∏™.‡∏Ñ. 20:00-21:00" },
];
// ‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô/‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á (mock)
const currentElections = [
    { id: 101, name: "‡∏™‡∏†‡∏≤‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô 2568", status: "voting", start: "2025-08-18 09:00", end: "2025-08-21 16:00", candidates: 12, turnout: 74 },
    { id: 102, name: "‡∏ä‡∏°‡∏£‡∏°‡∏Å‡∏µ‡∏¨‡∏≤ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏∞‡∏ò‡∏≤‡∏ô", status: "recruiting", start: "2025-08-25 09:00", end: "2025-08-28 16:00", candidates: 3, turnout: 0 },
    { id: 99, name: "‡∏™‡∏†‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£ 1/2568", status: "closed", start: "2025-07-01 09:00", end: "2025-07-03 16:00", candidates: 18, turnout: 71 },
];

const pieColors = ["#3b82f6", "#fbbf24", "#ef4444"]; // ‡∏ü‡πâ‡∏≤/‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á/‡πÅ‡∏î‡∏á

// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Turnout ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏à‡∏≤‡∏Å‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡πâ‡∏ß / ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
const currentTurnout = Math.round(
    (kpis.votesUsed / (kpis.votesUsed + kpis.votesRemaining)) * 100
);

export default function AdminDashboard() {
    return (
        <>
            <Header />
            <div className="min-h-screen bg-purple-100">
                {/* Topbar */}
                <header className="bg-white shadow px-6 py-4">
                    <div className="max-w-7xl mx-auto flex items-center justify-between gap-3">
                        <h1 className="text-xl font-bold">‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ¬∑ ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢</h1>
                        <div className="hidden sm:flex gap-2">
                            <button className="px-3 py-2 rounded-lg border bg-white hover:bg-gray-50 text-sm">‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å CSV</button>
                            <button className="px-3 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 text-sm">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á</button>
                        </div>
                    </div>
                </header>

                <main className="p-6 max-w-7xl mx-auto">
                    {/* KPI Row ‚Äì responsive */}
                    <section className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4 mb-6">
                        <Kpi title="‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" value={kpis.users} accent="from-sky-500/10 to-sky-500/0" icon="üë•" />
                        <Kpi title="‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÇ‡∏´‡∏ß‡∏ï" value={kpis.eligible} accent="from-emerald-500/10 to-emerald-500/0" icon="‚úÖ" />
                        <Kpi title="‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£" value={kpis.candidates} accent="from-fuchsia-500/10 to-fuchsia-500/0" icon="üè∑Ô∏è" />
                        <Kpi title="‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£" value={kpis.committee} accent="from-amber-500/10 to-amber-500/0" icon="üßë‚Äç‚öñÔ∏è" />
                        <Kpi title="‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô" value={kpis.admins} accent="from-rose-500/10 to-rose-500/0" icon="üõ°Ô∏è" />
                    </section>

                    <section className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
                        <Kpi title="‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" value={kpis.elections} icon="üó≥Ô∏è" />
                        <Kpi title="‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£" value={kpis.recruiting || 3} icon="üì•" />
                        <Kpi title="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô" value={kpis.voting || 2} icon="üîä" />
                        <Kpi title="‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô" value={kpis.closed || 7} icon="‚úÖ" />
                    </section>



                    {/* Real-time Turnout */}
                    <section className="bg-white shadow rounded-lg p-4 mb-6">
                        <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3">
                            <h2 className="font-semibold">Turnout ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (Real-time)</h2>
                            <p className="text-sm text-gray-500">‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</p>
                        </div>
                        <div className="mt-3">
                            <div className="flex items-center justify-between text-sm text-gray-600">
                                <span>‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡πâ‡∏ß</span>
                                <span>
                                    {kpis.votesUsed} / {kpis.votesUsed + kpis.votesRemaining} ‡∏Ñ‡∏ô ¬∑ {currentTurnout}%
                                </span>
                            </div>
                            <div className="h-3 w-full bg-gray-200 rounded-full overflow-hidden mt-2">
                                <div
                                    className="h-full bg-emerald-500"
                                    style={{ width: `${currentTurnout}%` }}
                                />
                            </div>
                        </div>
                        {/* TODO: ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° WebSocket/SSE ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå */}
                    </section>

                    {/* Charts Row */}
                    <section className="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
                        {/* Turnout History */}
                        <div className="bg-white shadow rounded-lg p-4 lg:col-span-2">
                            <h2 className="font-semibold mb-2">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á (Turnout)</h2>
                            <ResponsiveContainer width="100%" height={260}>
                                <BarChart data={turnoutHistory}>
                                    <CartesianGrid strokeDasharray="3 3" />
                                    <XAxis dataKey="name" />
                                    <YAxis />
                                    <Tooltip />
                                    <Legend />
                                    <Bar dataKey="turnout" fill="#3b82f6" />
                                </BarChart>
                            </ResponsiveContainer>
                        </div>

                        {/* Ballot Split */}
                        <div className="bg-white shadow rounded-lg p-4">
                            <h2 className="font-semibold mb-2">‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á</h2>
                            <ResponsiveContainer width="100%" height={260}>
                                <PieChart>
                                    <Pie data={ballotSplit} dataKey="value" nameKey="name" outerRadius={90} label>
                                        {ballotSplit.map((entry, i) => (
                                            <Cell key={`cell-${i}`} fill={pieColors[i % pieColors.length]} />
                                        ))}
                                    </Pie>
                                    <Legend />
                                    <Tooltip />
                                </PieChart>
                            </ResponsiveContainer>
                        </div>
                    </section>

                    {/* Users Breakdown: Department & Year */}
                    <section className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
                        <div className="bg-white shadow rounded-lg p-4">
                            <h2 className="font-semibold mb-2">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏Å</h2>
                            <ResponsiveContainer width="100%" height={260}>
                                <BarChart data={deptData} layout="vertical" margin={{ top: 10, right: 10, left: 20, bottom: 0 }}>
                                    <CartesianGrid strokeDasharray="3 3" />
                                    <XAxis type="number" />
                                    <YAxis type="category" dataKey="name" width={90} />
                                    <Tooltip />
                                    <Legend />
                                    <Bar dataKey="students" fill="#10b981" radius={[0, 6, 6, 0]} />
                                </BarChart>
                            </ResponsiveContainer>

                        </div>

                        <div className="bg-white shadow rounded-lg p-4">
                            <h2 className="font-semibold mb-2">‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ</h2>
                            <ResponsiveContainer width="100%" height={260}>
                                <BarChart data={yearData}>
                                    <CartesianGrid strokeDasharray="3 3" />
                                    <XAxis dataKey="name" />
                                    <YAxis />
                                    <Tooltip />
                                    <Legend />
                                    <Bar dataKey="count" fill="#6366f1" />
                                </BarChart>
                            </ResponsiveContainer>
                        </div>
                    </section>
                    {/* Current Elections (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô) */}
                    <section className="bg-white shadow rounded-lg p-4 mb-6">
                        <div className="flex items-center justify-between">
                            <h2 className="font-semibold">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</h2>
                            <button className="text-sm text-blue-600 hover:underline">‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</button>
                        </div>

                        <div className="mt-3 overflow-x-auto">
                            <table className="w-full text-sm">
                                <thead>
                                    <tr className="border-b bg-gray-50">
                                        <th className="text-left py-2 px-2">‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡πâ‡∏á</th>
                                        <th className="text-left px-2">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                                        <th className="text-left px-2">‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤</th>
                                        <th className="text-left px-2">‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£</th>
                                        <th className="text-left px-2">Turnout</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {currentElections.map((e) => (
                                        <tr key={e.id} className="border-b">
                                            <td className="py-2 px-2 whitespace-nowrap">{e.name}</td>
                                            <td className="px-2"><StatusBadge status={e.status} /></td>
                                            <td className="px-2 text-gray-600 text-xs sm:text-sm">
                                                {e.start} ‚Äì {e.end}
                                            </td>
                                            <td className="px-2">{e.candidates}</td>
                                            <td className="px-2">
                                                <div className="w-28 sm:w-40 h-2 bg-gray-200 rounded-full overflow-hidden inline-block align-middle">
                                                    <div className="h-full bg-emerald-500" style={{ width: `${e.turnout}%` }} />
                                                </div>
                                                <span className="ml-2 text-xs text-gray-600 align-middle">{e.turnout}%</span>
                                            </td>
                                        </tr>
                                    ))}
                                </tbody>
                            </table>
                        </div>
                    </section>

                    {/* Activity Logs */}
                    <section className="bg-white shadow rounded-lg p-4">
                        <div className="flex items-center justify-between">
                            <h2 className="font-semibold">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h2>
                            <button className="text-sm text-blue-600 hover:underline">‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</button>
                        </div>
                        <ul className="mt-3 divide-y">
                            {activityLogs.map((log) => (
                                <li key={log.id} className="py-3 flex items-start gap-3">
                                    <span className="mt-1 h-2.5 w-2.5 rounded-full bg-emerald-500 shrink-0" />
                                    <div className="flex-1">
                                        <p className="text-sm text-gray-800">{log.text}</p>
                                        <p className="text-xs text-gray-500">{log.time}</p>
                                    </div>
                                </li>
                            ))}
                        </ul>
                    </section>


                    {/* Helper Note */}
                    <p className="text-xs text-gray-400 mt-6">
                        *‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á ‚Äì ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà API: /api/users/stats, /api/users/by-department, /api/users/by-year, /api/votes/turnout, /api/logs
                    </p>
                </main>
            </div>
        </>
    );
}

// ------------------------------
// üß© Small components
// ------------------------------
// function Kpi({ title, value, accent = "from-indigo-500/10 to-indigo-500/0", icon = "üë•" }) {
//     return (
//         <div className={`relative overflow-hidden rounded-xl border bg-white shadow-sm hover:shadow-md transition-shadow`}>
//             <div className={`absolute inset-0 bg-gradient-to-br ${accent}`} />
//             <div className="relative p-4">
//                 <div className="flex items-center justify-between">
//                     <p className="text-xs font-medium text-gray-500">{title}</p>
//                     <span className="text-lg">{icon}</span>
//                 </div>
//                 <p className="mt-1 text-2xl font-bold tracking-tight">{value}</p>
//             </div>
//         </div>
//     );
// }

function Kpi({ title, value, accent = "from-indigo-500/10 to-indigo-500/0", icon = "üë•" }) {
    return (
        <div className={`relative overflow-hidden rounded-xl border bg-white shadow-sm hover:shadow-md transition-shadow`}>
            <div className={`absolute inset-0 bg-gradient-to-br ${accent}`} />
            <div className="relative p-4">
                <p className="text-xs font-medium text-gray-500">{title}</p>
                <div className="mt-1 flex items-center justify-between">
                    <p className="text-2xl font-bold tracking-tight">{value}</p>
                    <span className="text-2xl">{icon}</span>
                </div>
            </div>
        </div>
    );
}




function StatusBadge({ status }) {
    const map = {
        recruiting: { text: "‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£", cls: "bg-blue-100 text-blue-700" },
        voting: { text: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô", cls: "bg-green-100 text-green-700" },
        closed: { text: "‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß", cls: "bg-gray-200 text-gray-700" },
        hidden: { text: "‡∏ã‡πà‡∏≠‡∏ô", cls: "bg-zinc-200 text-zinc-700" },
    };
    const it = map[status] || { text: status, cls: "bg-zinc-100 text-zinc-700" };
    return <span className={`px-2 py-1 rounded text-xs font-medium ${it.cls}`}>{it.text}</span>;
}
